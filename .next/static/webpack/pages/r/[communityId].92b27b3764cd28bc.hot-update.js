"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("pages/r/[communityId]",{

/***/ "./src/hooks/usePosts.tsx":
/*!********************************!*\
  !*** ./src/hooks/usePosts.tsx ***!
  \********************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"./node_modules/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var recoil__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! recoil */ \"./node_modules/recoil/es/index.js\");\n/* harmony import */ var _atoms_PostsAtom__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../atoms/PostsAtom */ \"./src/atoms/PostsAtom.ts\");\n/* harmony import */ var firebase_storage__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! firebase/storage */ \"./node_modules/firebase/storage/dist/esm/index.esm.js\");\n/* harmony import */ var _firebase_clientApp__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../firebase/clientApp */ \"./src/firebase/clientApp.ts\");\n/* harmony import */ var firebase_firestore__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! firebase/firestore */ \"./node_modules/firebase/firestore/dist/esm/index.esm.js\");\n/* harmony import */ var react_firebase_hooks_auth__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! react-firebase-hooks/auth */ \"./node_modules/react-firebase-hooks/auth/dist/index.esm.js\");\n/* harmony import */ var _atoms_communitiesAtom__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../atoms/communitiesAtom */ \"./src/atoms/communitiesAtom.ts\");\n/* harmony import */ var _atoms_authModalAtom__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../atoms/authModalAtom */ \"./src/atoms/authModalAtom.ts\");\nvar _s = $RefreshSig$();\n\n\n\n\n\n\n\n\n\nconst usePosts = ()=>{\n    _s();\n    const [user, loadingUser] = (0,react_firebase_hooks_auth__WEBPACK_IMPORTED_MODULE_6__.useAuthState)(_firebase_clientApp__WEBPACK_IMPORTED_MODULE_4__.auth);\n    const [postStateValue, setPostStateValue] = (0,recoil__WEBPACK_IMPORTED_MODULE_1__.useRecoilState)(_atoms_PostsAtom__WEBPACK_IMPORTED_MODULE_2__.postState);\n    const currentCommunity = (0,recoil__WEBPACK_IMPORTED_MODULE_1__.useRecoilValue)(_atoms_communitiesAtom__WEBPACK_IMPORTED_MODULE_7__.communityState).currentCommunity;\n    const setAuthModalState = (0,recoil__WEBPACK_IMPORTED_MODULE_1__.useSetRecoilState)(_atoms_authModalAtom__WEBPACK_IMPORTED_MODULE_8__.authModalState);\n    const onVote = async (post, voteAtr, communityId)=>{\n        if (!(user === null || user === void 0 ? void 0 : user.uid)) {\n            setAuthModalState({\n                open: true,\n                view: \"login\"\n            });\n            return;\n        }\n        //已有投票数\n        const { voteStatus  } = post;\n        //此帖子是否投票\n        const existingVote = postStateValue.postVotes.find((votePost)=>votePost.postId === post.id);\n        console.log(existingVote);\n        try {\n            // batch写入\n            const batch = (0,firebase_firestore__WEBPACK_IMPORTED_MODULE_5__.writeBatch)(_firebase_clientApp__WEBPACK_IMPORTED_MODULE_4__.firestore);\n            // the posts that are voted\n            const updatedPost = {\n                ...post\n            };\n            // array of posts\n            const updatedPosts = [\n                ...postStateValue.posts\n            ];\n            // which has been voted\n            let updatedPostVotes = [\n                ...postStateValue.postVotes\n            ];\n            let voteChange = voteAtr;\n            // New vote\n            if (!existingVote) {\n                // 存入数据库中\n                const postVoteRef = (0,firebase_firestore__WEBPACK_IMPORTED_MODULE_5__.doc)(_firebase_clientApp__WEBPACK_IMPORTED_MODULE_4__.firestore, \"users\", \"\".concat(user === null || user === void 0 ? void 0 : user.uid, \"/postVotes\"));\n                // create a new document post\n                const newVote = {\n                    id: postVoteRef.id,\n                    postId: post.id,\n                    communityId,\n                    voteValue: voteAtr\n                };\n                console.log(\"NEW VOTE!!!\", newVote);\n                batch.set(postVoteRef, newVote);\n                console.log(\"BATCH_SET successful\");\n                // 总数\n                // add/subtract 1 to/from post.voteStatus\n                updatedPost.voteStatus = voteStatus + voteAtr;\n                console.log(updatedPost.voteStatus);\n                // 数组里面每个数\n                updatedPostVotes = [\n                    ...updatedPostVotes,\n                    newVote\n                ];\n                console.log(updatedPostVotes);\n            } else {\n                //从文件夹中找出\n                const postVoteRef = (0,firebase_firestore__WEBPACK_IMPORTED_MODULE_5__.doc)(_firebase_clientApp__WEBPACK_IMPORTED_MODULE_4__.firestore, \"users\", \"\".concat(user === null || user === void 0 ? void 0 : user.uid, \"/postVotes/\").concat(existingVote.id));\n                // Existing vote - they have voted on the post before\n                // remove their vote\n                if (existingVote.voteValue === voteAtr) {\n                    // add/subtract 1 to/from post.voteStatus\n                    // opposite direction\n                    updatedPost.voteStatus = voteStatus - voteAtr;\n                    // remove Existing vote post from the array\n                    updatedPostVotes = updatedPostVotes.filter((votePost)=>votePost.id !== existingVote.id);\n                    // delete postVote document\n                    // 数据库删除\n                    batch.delete(postVoteRef);\n                    voteChange *= -1;\n                } else {\n                    //flip their vote\n                    // add/subtract 2 to/from post.voteStatus\n                    updatedPost.voteStatus = voteStatus + 2 * voteAtr;\n                    const voteIdx = postStateValue.postVotes.findIndex((votePost)=>votePost.id === existingVote.id);\n                    // Vote was found - findIndex returns -1 if not found\n                    // update voteValue\n                    if (voteIdx !== -1) {\n                        updatedPostVotes[voteIdx] = {\n                            ...existingVote,\n                            voteValue: voteAtr\n                        };\n                    }\n                    // updating the existing postVote document\n                    batch.update(postVoteRef, {\n                        voteValue: voteAtr\n                    });\n                    voteChange = 2 * voteAtr;\n                }\n                // update the post document\n                // 数据库里面的另外一个文件夹\n                const postRef = (0,firebase_firestore__WEBPACK_IMPORTED_MODULE_5__.doc)(_firebase_clientApp__WEBPACK_IMPORTED_MODULE_4__.firestore, \"posts\", post.id);\n                batch.update(postRef, {\n                    voteStatus: voteStatus + voteChange\n                });\n                await batch.commit();\n                //update state with updated values\n                const postIdx = postStateValue.posts.findIndex((item)=>item.id === post.id);\n                updatedPosts[postIdx] = updatedPost;\n                setPostStateValue((prev)=>({\n                        ...prev,\n                        posts: updatedPosts,\n                        postVotes: updatedPostVotes\n                    }));\n            }\n        } catch (error) {\n            console.log(\"onVote Error\", error);\n        }\n    };\n    const onSelectPost = ()=>{};\n    const onDeletePost = async (post)=>{\n        try {\n            // check if image, delete if exists\n            if (post.imageURL) {\n                const imageRef = (0,firebase_storage__WEBPACK_IMPORTED_MODULE_3__.ref)(_firebase_clientApp__WEBPACK_IMPORTED_MODULE_4__.storage, \"posts/\".concat(post.id, \"/image\"));\n                await (0,firebase_storage__WEBPACK_IMPORTED_MODULE_3__.deleteObject)(imageRef);\n            }\n            // delete post document from firestore\n            const postDocRef = (0,firebase_firestore__WEBPACK_IMPORTED_MODULE_5__.doc)(_firebase_clientApp__WEBPACK_IMPORTED_MODULE_4__.firestore, \"posts\", post.id);\n            await (0,firebase_firestore__WEBPACK_IMPORTED_MODULE_5__.deleteDoc)(postDocRef);\n            // update recoil state\n            setPostStateValue((prev)=>({\n                    ...prev,\n                    posts: prev.posts.filter((item)=>item.id !== post.id)\n                }));\n            return true;\n        } catch (error) {}\n        return true;\n    };\n    // render the UI\n    const getCommunityPostVote = async (communityId)=>{\n        const postVotesQuery = (0,firebase_firestore__WEBPACK_IMPORTED_MODULE_5__.query)((0,firebase_firestore__WEBPACK_IMPORTED_MODULE_5__.collection)(_firebase_clientApp__WEBPACK_IMPORTED_MODULE_4__.firestore, \"users\", \"\".concat(user === null || user === void 0 ? void 0 : user.uid, \"/postVotes\")), (0,firebase_firestore__WEBPACK_IMPORTED_MODULE_5__.where)(\"communityId\", \"==\", communityId));\n        const postVoteDocs = await (0,firebase_firestore__WEBPACK_IMPORTED_MODULE_5__.getDocs)(postVotesQuery);\n        const postVotes = postVoteDocs.docs.map((doc)=>({\n                id: doc.id,\n                ...doc.data\n            }));\n        setPostStateValue((prev)=>({\n                ...prev,\n                postVotes: postVotes\n            }));\n    };\n    // inside the [] is dependency\n    (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(()=>{\n        if (!user || !(currentCommunity === null || currentCommunity === void 0 ? void 0 : currentCommunity.id)) return;\n        getCommunityPostVote(currentCommunity === null || currentCommunity === void 0 ? void 0 : currentCommunity.id);\n    }, [\n        user,\n        currentCommunity\n    ]);\n    // login or not?\n    (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(()=>{\n        if (!user) {\n            // clear user post\n            setPostStateValue((prev)=>({\n                    ...prev,\n                    postVotes: []\n                }));\n        }\n    }, [\n        user\n    ]);\n    return {\n        postStateValue,\n        setPostStateValue,\n        onVote,\n        onSelectPost,\n        onDeletePost\n    };\n};\n_s(usePosts, \"iHzXbr+Rg13FkxIshmoMR2XHTug=\", false, function() {\n    return [\n        react_firebase_hooks_auth__WEBPACK_IMPORTED_MODULE_6__.useAuthState,\n        recoil__WEBPACK_IMPORTED_MODULE_1__.useRecoilState,\n        recoil__WEBPACK_IMPORTED_MODULE_1__.useRecoilValue,\n        recoil__WEBPACK_IMPORTED_MODULE_1__.useSetRecoilState\n    ];\n});\n/* harmony default export */ __webpack_exports__[\"default\"] = (usePosts);\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevExports = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevExports) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports on update so we can compare the boundary\n                // signatures.\n                module.hot.dispose(function (data) {\n                    data.prevExports = currentExports;\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevExports !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevExports, currentExports)) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevExports !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/hooks/usePosts.tsx\n"));

/***/ })

});